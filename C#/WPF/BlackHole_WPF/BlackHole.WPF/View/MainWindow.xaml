<Window x:Class="BlackHole.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Black Hole" Height="450" Width="400" MinHeight="450" MaxWidth="410"
        FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}"
        Focusable="True">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Menu Grid.Row="0">
            <MenuItem Header="File">
                <MenuItem Header="New Game" Command="{Binding NewGameCommand}"/>
                <Separator/>
                <MenuItem Header="Load Game..." Command="{Binding LoadGameCommand}"/>
                <MenuItem Header="Save Game..." Command="{Binding SaveGameCommand}"/>
                <Separator/>
                <MenuItem Header="Exit Game" Command="{Binding ExitCommand}"/>
            </MenuItem>
            <MenuItem Header="Settings">
                <MenuItem Header="Set Map Size">
                    <TextBox x:Name="MapSizeTextBox" Height="20" Width="80"/>
                </MenuItem>
            </MenuItem>
        </Menu>
        <ItemsControl Grid.Row="1" ItemsSource="{Binding Fields}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid Rows="{Binding GetMapSize}" Columns="{Binding GetMapSize}" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button Command="{Binding ClickCommand}" CommandParameter="{Binding XY}" Focusable="True" RenderTransformOrigin="0.5, 0.5">
                        <Button.RenderTransform>
                            <ScaleTransform ScaleX="1" ScaleY="1" />
                        </Button.RenderTransform>
                        <Button.Style>
                            <Style TargetType="Button">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding FieldValue}" Value="EMPTY">
                                        <Setter Property="Background" Value="White" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding FieldValue}" Value="BLACKHOLE">
                                        <Setter Property="Background" Value="Black" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding FieldValue}" Value="RED">
                                        <Setter Property="Background" Value="Red" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding FieldValue}" Value="BLUE">
                                        <Setter Property="Background" Value="Blue" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Button.Triggers>
                            <EventTrigger RoutedEvent="Button.Loaded">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:00:02" From="0" To="1" Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Button.Click">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Duration="0:00:00.2" Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)">
                                            <ColorAnimationUsingKeyFrames.KeyFrames>
                                                <DiscreteColorKeyFrame Value="Red" KeyTime="0:00:00" />
                                                <DiscreteColorKeyFrame Value="Black" KeyTime="0:00:00.2" />
                                            </ColorAnimationUsingKeyFrames.KeyFrames>
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0:00:00.1" From="1" To="0.5" AutoReverse="True" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" />
                                        <DoubleAnimation Duration="0:00:00.1" From="1" To="0.5" AutoReverse="True" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Button.Triggers>
                    </Button>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
            <ItemsControl.ItemContainerStyle>
                <Style>
                    <Setter Property="Grid.Row" Value="{Binding X}" />
                    <Setter Property="Grid.Column" Value="{Binding Y}" />
                </Style>
            </ItemsControl.ItemContainerStyle>
        </ItemsControl>
        <StatusBar Grid.Row="2">
            <StatusBarItem>
                <TextBlock Text="Turn: " />
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Text="{Binding CurrentPlayer}" />
            </StatusBarItem>
            <Separator />
            <StatusBarItem>
                <TextBlock Text="Time: " />
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Text="{Binding GameTime}" />
            </StatusBarItem>
            <Separator />
            <StatusBarItem>
                <TextBlock Text="RED:" />
            </StatusBarItem>
            <ProgressBar Value="{Binding RedShipsIn, Mode=OneWay}" Minimum="0" Maximum="{Binding ShipsInToWin}" Height="12" Width="50" SmallChange="1" />
            <Separator/>
            <StatusBarItem>
                <TextBlock Text="BLUE:" />
            </StatusBarItem>
            <ProgressBar Value="{Binding BlueShipsIn, Mode=OneWay}" Minimum="0" Maximum="{Binding ShipsInToWin}" Height="12" Width="50" SmallChange="1" />
            <StatusBarItem />
        </StatusBar>
    </Grid>

</Window>
